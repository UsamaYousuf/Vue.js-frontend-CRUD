{"ast":null,"code":"import axios from 'axios';\nexport default {\n  name: 'RegisterComponent',\n  data() {\n    return {\n      name: '',\n      email: '',\n      password: '',\n      repeatPassword: '',\n      errorMessage: '',\n      buttonValue: 'Register',\n      emailError: '',\n      nameError: '',\n      passwordError: '',\n      registerBtnToggle: true\n    };\n  },\n  mounted() {},\n  methods: {\n    checkValidForm() {\n      if (this.name !== '' && this.email !== '' && this.repeatPassword !== '' && this.password !== '') {\n        if (this.repeatPassword == this.password) {\n          this.errorMessage = '';\n          this.registerBtnToggle = false;\n        } else {\n          this.errorMessage = 'Passwords donot match';\n          this.registerBtnToggle = true;\n        }\n      } else {\n        this.registerBtnToggle = true;\n      }\n    },\n    submitForm() {\n      this.registerBtnToggle = true;\n      this.buttonValue = 'Loading...';\n      axios.post(process.env.BACKEND_API_URL + '/register', {\n        'email': this.email,\n        'name': this.name,\n        'password': this.password\n      }).then(response => {\n        alert(JSON.stringify(response.data));\n      }).catch(error => {\n        this.emailError = JSON.stringify(error.response.data.message.email) || '';\n        this.nameError = JSON.stringify(error.response.data.message.name) || '';\n        this.passwordError = JSON.stringify(error.response.data.message.password) || '';\n      }).finally(() => {\n        this.registerBtnToggle = false;\n        this.buttonValue = 'Register';\n      });\n    }\n  }\n};","map":{"version":3,"names":["axios","name","data","email","password","repeatPassword","errorMessage","buttonValue","emailError","nameError","passwordError","registerBtnToggle","mounted","methods","checkValidForm","submitForm","post","process","env","BACKEND_API_URL","then","response","alert","JSON","stringify","catch","error","message","finally"],"sources":["C:\\laragon\\www\\practiceapp\\src\\components\\RegisterComponent.vue"],"sourcesContent":["<template>\r\n    <div>\r\n        \r\n        <div action=\"\" class=\"register mx-auto\" >\r\n             <h1>REGISTER</h1>\r\n             <p class=\"errorMessage\" >{{ emailError }}</p>\r\n             <p class=\"errorMessage\" >{{ nameError }}</p>\r\n             <p class=\"errorMessage\" >{{ passwordError }}</p>\r\n\r\n            <input type=\"text\" class=\"form-control\" placeholder=\"email\" v-model=\"email\" @keyup=\"checkValidForm\">\r\n            \r\n            <input type=\"text\" class=\"form-control\"  placeholder=\"name\" v-model=\"name\" @keyup=\"checkValidForm\">\r\n            <input type=\"text\" class=\"form-control\"  placeholder=\"password\" v-model=\"password\" @keyup=\"checkValidForm\">\r\n            <input type=\"text\" class=\"form-control\"  placeholder=\"password\" v-model=\"repeatPassword\" @keyup=\"checkValidForm\">\r\n            <p class=\"errorMessage\" >{{ errorMessage }}</p>\r\n            <button @click=\"submitForm\" class=\"btn btn-primary\" :disabled=\"registerBtnToggle\" @keyup=\"checkValidForm\">{{buttonValue}}</button>\r\n        </div>\r\n    </div>\r\n\r\n\r\n\r\n\r\n\r\n</template>\r\n\r\n<script>\r\n\r\nimport axios from 'axios';\r\n\r\nexport default{\r\n    name: 'RegisterComponent',\r\n\r\n    data(){\r\n        return{\r\n            name:'',\r\n            email:'',\r\n            password:'',\r\n            repeatPassword:'',\r\n            errorMessage:'',\r\n            buttonValue:'Register',\r\n            emailError :'',\r\n            nameError :'',\r\n            passwordError :'',\r\n            registerBtnToggle: true\r\n        };\r\n\r\n    },\r\n    mounted(){\r\n        \r\n    },\r\n    methods: {\r\n        checkValidForm(){\r\n            if(this.name !== '' && this.email !== '' && this.repeatPassword !== '' && this.password !== '' ){\r\n                if(this.repeatPassword == this.password ){\r\n\r\n                 this.errorMessage = '';\r\n                 this.registerBtnToggle = false;\r\n\r\n                 }else{\r\n                    this.errorMessage = 'Passwords donot match';\r\n                    this.registerBtnToggle = true;\r\n                }\r\n\r\n            }else{\r\n                this.registerBtnToggle = true;\r\n\r\n            }\r\n        },\r\n       submitForm(){\r\n\r\n            this.registerBtnToggle = true ;\r\n            this.buttonValue = 'Loading...';\r\n            \r\n            axios.post( process.env.BACKEND_API_URL +'/register', {'email': this.email, 'name': this.name, 'password': this.password})\r\n                .then((response) => { \r\n                    alert(JSON.stringify(response.data)) \r\n                })\r\n                .catch((error) => {\r\n                    this.emailError = (JSON.stringify(error.response.data.message.email)) || '';\r\n                    this.nameError = (JSON.stringify(error.response.data.message.name)) || '';\r\n                    this.passwordError = (JSON.stringify(error.response.data.message.password)) || '' ;\r\n                })\r\n                .finally(() => {\r\n                    this.registerBtnToggle = false;\r\n                    this.buttonValue = 'Register';\r\n                });\r\n        }\r\n\r\n\r\n        \r\n    },\r\n}\r\n\r\n\r\n</script>\r\n\r\n<style scoped>\r\n\r\n.register{\r\n\r\n    padding: 20%;\r\n    background-color: rgba(165, 42, 42, 0.186);\r\n \r\n    text-align: center;\r\n    \r\n}\r\n.errorMessage{\r\n    color:red;\r\n}\r\n\r\ninput{\r\n\r\n    margin-bottom:2rem;\r\n}\r\n</style>"],"mappings":"AA2BA,OAAOA,KAAI,MAAO,OAAO;AAEzB,eAAc;EACVC,IAAI,EAAE,mBAAmB;EAEzBC,IAAIA,CAAA,EAAE;IACF,OAAM;MACFD,IAAI,EAAC,EAAE;MACPE,KAAK,EAAC,EAAE;MACRC,QAAQ,EAAC,EAAE;MACXC,cAAc,EAAC,EAAE;MACjBC,YAAY,EAAC,EAAE;MACfC,WAAW,EAAC,UAAU;MACtBC,UAAS,EAAG,EAAE;MACdC,SAAQ,EAAG,EAAE;MACbC,aAAY,EAAG,EAAE;MACjBC,iBAAiB,EAAE;IACvB,CAAC;EAEL,CAAC;EACDC,OAAOA,CAAA,EAAE,CAET,CAAC;EACDC,OAAO,EAAE;IACLC,cAAcA,CAAA,EAAE;MACZ,IAAG,IAAI,CAACb,IAAG,KAAM,EAAC,IAAK,IAAI,CAACE,KAAI,KAAM,EAAC,IAAK,IAAI,CAACE,cAAa,KAAM,EAAC,IAAK,IAAI,CAACD,QAAO,KAAM,EAAC,EAAG;QAC5F,IAAG,IAAI,CAACC,cAAa,IAAK,IAAI,CAACD,QAAO,EAAG;UAExC,IAAI,CAACE,YAAW,GAAI,EAAE;UACtB,IAAI,CAACK,iBAAgB,GAAI,KAAK;QAE9B,CAAC,MAAI;UACF,IAAI,CAACL,YAAW,GAAI,uBAAuB;UAC3C,IAAI,CAACK,iBAAgB,GAAI,IAAI;QACjC;MAEJ,CAAC,MAAI;QACD,IAAI,CAACA,iBAAgB,GAAI,IAAI;MAEjC;IACJ,CAAC;IACFI,UAAUA,CAAA,EAAE;MAEP,IAAI,CAACJ,iBAAgB,GAAI,IAAG;MAC5B,IAAI,CAACJ,WAAU,GAAI,YAAY;MAE/BP,KAAK,CAACgB,IAAI,CAAEC,OAAO,CAACC,GAAG,CAACC,eAAc,GAAG,WAAW,EAAE;QAAC,OAAO,EAAE,IAAI,CAAChB,KAAK;QAAE,MAAM,EAAE,IAAI,CAACF,IAAI;QAAE,UAAU,EAAE,IAAI,CAACG;MAAQ,CAAC,EACpHgB,IAAI,CAAEC,QAAQ,IAAK;QAChBC,KAAK,CAACC,IAAI,CAACC,SAAS,CAACH,QAAQ,CAACnB,IAAI,CAAC;MACvC,CAAC,EACAuB,KAAK,CAAEC,KAAK,IAAK;QACd,IAAI,CAAClB,UAAS,GAAKe,IAAI,CAACC,SAAS,CAACE,KAAK,CAACL,QAAQ,CAACnB,IAAI,CAACyB,OAAO,CAACxB,KAAK,CAAC,IAAK,EAAE;QAC3E,IAAI,CAACM,SAAQ,GAAKc,IAAI,CAACC,SAAS,CAACE,KAAK,CAACL,QAAQ,CAACnB,IAAI,CAACyB,OAAO,CAAC1B,IAAI,CAAC,IAAK,EAAE;QACzE,IAAI,CAACS,aAAY,GAAKa,IAAI,CAACC,SAAS,CAACE,KAAK,CAACL,QAAQ,CAACnB,IAAI,CAACyB,OAAO,CAACvB,QAAQ,CAAC,IAAK,EAAC;MACpF,CAAC,EACAwB,OAAO,CAAC,MAAM;QACX,IAAI,CAACjB,iBAAgB,GAAI,KAAK;QAC9B,IAAI,CAACJ,WAAU,GAAI,UAAU;MACjC,CAAC,CAAC;IACV;EAIJ;AACJ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}