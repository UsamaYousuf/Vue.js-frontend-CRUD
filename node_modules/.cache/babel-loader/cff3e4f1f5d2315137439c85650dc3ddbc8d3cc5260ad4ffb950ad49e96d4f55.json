{"ast":null,"code":"import axios from 'axios';\nexport default {\n  data() {\n    return {\n      buttonValue: 'Login',\n      loginButtonToggle: true,\n      email: '',\n      password: ''\n    };\n  },\n  methods: {\n    checkFormValidity() {\n      if (this.email == '' || this.password == '') {\n        this.loginButtonToggle = true;\n      } else {\n        this.loginButtonToggle = false;\n      }\n    },\n    submitForm() {\n      this.buttonValue = 'Loading....';\n      this.loginButtonToggle = true;\n      axios.post(process.env.VUE_APP_BACKEND_API_URL + '/login', {\n        'email': this.email,\n        'password': this.password\n      }).then(response => {\n        alert(JSON.stringify(response));\n      }).catch(error => {\n        alert(JSON.stringify(error.response.data.message));\n      }).finally();\n    }\n  }\n};","map":{"version":3,"names":["axios","data","buttonValue","loginButtonToggle","email","password","methods","checkFormValidity","submitForm","post","process","env","VUE_APP_BACKEND_API_URL","then","response","alert","JSON","stringify","catch","error","message","finally"],"sources":["C:\\laragon\\www\\practiceapp\\src\\components\\LoginComponent.vue"],"sourcesContent":["<template>\r\n    <div>\r\n        <div action=\"\" class=\"login mx-auto\">\r\n            <h1>Login</h1>\r\n            <input @keyup=\"checkFormValidity\" type=\"email\" class=\"form-control\" placeholder=\"email\" v-model=\"email\" >\r\n            <input @keyup=\"checkFormValidity\" type=\"text\" class=\"form-control\" placeholder=\"password\" v-model=\"password\">\r\n            <button @click=\"submitForm\" class=\"btn btn-primary\" :disabled=\"loginButtonToggle\">{{ buttonValue }}</button>\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from 'axios';\r\n\r\nexport default {\r\n    data() {\r\n        return {\r\n            buttonValue: 'Login',\r\n            loginButtonToggle: true,\r\n            email: '',\r\n            password: ''\r\n        }\r\n    },\r\n    methods: {\r\n        checkFormValidity() {\r\n            if (this.email == '' || this.password == '') {\r\n                this.loginButtonToggle = true;\r\n            } else {\r\n                this.loginButtonToggle = false;\r\n            }\r\n        },\r\n        submitForm(){\r\n            this.buttonValue = 'Loading....';\r\n            this.loginButtonToggle = true;\r\n\r\n            axios.post(process.env.VUE_APP_BACKEND_API_URL+'/login',{\r\n                'email' : this.email,\r\n                'password' :this.password\r\n            }).\r\n            then(\r\n                (response)=>{\r\n                    alert(JSON.stringify(response));\r\n                }\r\n\r\n            ).\r\n            catch(\r\n                (error) =>{\r\n                    alert(JSON.stringify(error.response.data.message));\r\n                }\r\n            ).\r\n            finally()\r\n        }\r\n    }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.login {\r\n    margin-top: 10%;\r\n    padding: 2%;\r\n    border: solid 1px black;\r\n    text-align: center;\r\n    width: 50%;\r\n    height: 50%;\r\n    background-color: white;\r\n}\r\n.errorMessage {\r\n    color: red;\r\n}\r\ninput {\r\n    margin-bottom: 2rem;\r\n}\r\n</style>\r\n"],"mappings":"AAYA,OAAOA,KAAI,MAAO,OAAO;AAEzB,eAAe;EACXC,IAAIA,CAAA,EAAG;IACH,OAAO;MACHC,WAAW,EAAE,OAAO;MACpBC,iBAAiB,EAAE,IAAI;MACvBC,KAAK,EAAE,EAAE;MACTC,QAAQ,EAAE;IACd;EACJ,CAAC;EACDC,OAAO,EAAE;IACLC,iBAAiBA,CAAA,EAAG;MAChB,IAAI,IAAI,CAACH,KAAI,IAAK,EAAC,IAAK,IAAI,CAACC,QAAO,IAAK,EAAE,EAAE;QACzC,IAAI,CAACF,iBAAgB,GAAI,IAAI;MACjC,OAAO;QACH,IAAI,CAACA,iBAAgB,GAAI,KAAK;MAClC;IACJ,CAAC;IACDK,UAAUA,CAAA,EAAE;MACR,IAAI,CAACN,WAAU,GAAI,aAAa;MAChC,IAAI,CAACC,iBAAgB,GAAI,IAAI;MAE7BH,KAAK,CAACS,IAAI,CAACC,OAAO,CAACC,GAAG,CAACC,uBAAuB,GAAC,QAAQ,EAAC;QACpD,OAAM,EAAI,IAAI,CAACR,KAAK;QACpB,UAAS,EAAG,IAAI,CAACC;MACrB,CAAC,CAAC,CACFQ,IAAI,CACCC,QAAQ,IAAG;QACRC,KAAK,CAACC,IAAI,CAACC,SAAS,CAACH,QAAQ,CAAC,CAAC;MACnC,CAEJ,CAAC,CACDI,KAAK,CACAC,KAAK,IAAI;QACNJ,KAAK,CAACC,IAAI,CAACC,SAAS,CAACE,KAAK,CAACL,QAAQ,CAACb,IAAI,CAACmB,OAAO,CAAC,CAAC;MACtD,CACJ,CAAC,CACDC,OAAO,CAAC;IACZ;EACJ;AACJ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}