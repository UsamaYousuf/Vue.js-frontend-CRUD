{"ast":null,"code":"import { createElementVNode as _createElementVNode, toDisplayString as _toDisplayString, vModelText as _vModelText, withDirectives as _withDirectives, openBlock as _openBlock, createElementBlock as _createElementBlock, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-3742eecc\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  action: \"\",\n  class: \"register mx-auto\"\n};\nconst _hoisted_2 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"h1\", null, \"REGISTER\", -1 /* HOISTED */));\nconst _hoisted_3 = {\n  class: \"errorMessage\"\n};\nconst _hoisted_4 = {\n  class: \"errorMessage\"\n};\nconst _hoisted_5 = {\n  class: \"errorMessage\"\n};\nconst _hoisted_6 = {\n  class: \"errorMessage\"\n};\nconst _hoisted_7 = [\"disabled\"];\nexport function render(_ctx, _cache) {\n  return _openBlock(), _createElementBlock(\"div\", null, [_createElementVNode(\"div\", _hoisted_1, [_hoisted_2, _createElementVNode(\"p\", _hoisted_3, _toDisplayString(_ctx.emailError), 1 /* TEXT */), _createElementVNode(\"p\", _hoisted_4, _toDisplayString(_ctx.nameError), 1 /* TEXT */), _createElementVNode(\"p\", _hoisted_5, _toDisplayString(_ctx.passwordError), 1 /* TEXT */), _withDirectives(_createElementVNode(\"input\", {\n    type: \"text\",\n    class: \"form-control\",\n    placeholder: \"email\",\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => _ctx.email = $event),\n    onKeyup: _cache[1] || (_cache[1] = (...args) => _ctx.checkValidForm && _ctx.checkValidForm(...args))\n  }, null, 544 /* NEED_HYDRATION, NEED_PATCH */), [[_vModelText, _ctx.email]]), _withDirectives(_createElementVNode(\"input\", {\n    type: \"text\",\n    class: \"form-control\",\n    placeholder: \"name\",\n    \"onUpdate:modelValue\": _cache[2] || (_cache[2] = $event => _ctx.name = $event),\n    onKeyup: _cache[3] || (_cache[3] = (...args) => _ctx.checkValidForm && _ctx.checkValidForm(...args))\n  }, null, 544 /* NEED_HYDRATION, NEED_PATCH */), [[_vModelText, _ctx.name]]), _withDirectives(_createElementVNode(\"input\", {\n    type: \"text\",\n    class: \"form-control\",\n    placeholder: \"password\",\n    \"onUpdate:modelValue\": _cache[4] || (_cache[4] = $event => _ctx.password = $event),\n    onKeyup: _cache[5] || (_cache[5] = (...args) => _ctx.checkValidForm && _ctx.checkValidForm(...args))\n  }, null, 544 /* NEED_HYDRATION, NEED_PATCH */), [[_vModelText, _ctx.password]]), _withDirectives(_createElementVNode(\"input\", {\n    type: \"text\",\n    class: \"form-control\",\n    placeholder: \"password\",\n    \"onUpdate:modelValue\": _cache[6] || (_cache[6] = $event => _ctx.repeatPassword = $event),\n    onKeyup: _cache[7] || (_cache[7] = (...args) => _ctx.checkValidForm && _ctx.checkValidForm(...args))\n  }, null, 544 /* NEED_HYDRATION, NEED_PATCH */), [[_vModelText, _ctx.repeatPassword]]), _createElementVNode(\"p\", _hoisted_6, _toDisplayString(_ctx.errorMessage), 1 /* TEXT */), _createElementVNode(\"button\", {\n    onClick: _cache[8] || (_cache[8] = (...args) => _ctx.submitForm && _ctx.submitForm(...args)),\n    class: \"btn btn-primary\",\n    disabled: _ctx.registerBtnToggle,\n    onKeyup: _cache[9] || (_cache[9] = (...args) => _ctx.checkValidForm && _ctx.checkValidForm(...args))\n  }, _toDisplayString(_ctx.buttonValue), 41 /* TEXT, PROPS, NEED_HYDRATION */, _hoisted_7)])]);\n}","map":{"version":3,"names":["action","class","_createElementVNode","_createElementBlock","_hoisted_1","_hoisted_2","_hoisted_3","_toDisplayString","_ctx","emailError","_hoisted_4","nameError","_hoisted_5","passwordError","type","placeholder","_cache","$event","email","onKeyup","args","checkValidForm","name","password","repeatPassword","_hoisted_6","errorMessage","onClick","submitForm","disabled","registerBtnToggle","buttonValue","_hoisted_7"],"sources":["C:\\laragon\\www\\practiceapp\\src\\components\\RegisterComponent.vue"],"sourcesContent":["<template>\r\n    <div>\r\n        \r\n        <div action=\"\" class=\"register mx-auto\" >\r\n             <h1>REGISTER</h1>\r\n             <p class=\"errorMessage\" >{{ emailError }}</p>\r\n             <p class=\"errorMessage\" >{{ nameError }}</p>\r\n             <p class=\"errorMessage\" >{{ passwordError }}</p>\r\n\r\n            <input type=\"text\" class=\"form-control\" placeholder=\"email\" v-model=\"email\" @keyup=\"checkValidForm\">\r\n            \r\n            <input type=\"text\" class=\"form-control\"  placeholder=\"name\" v-model=\"name\" @keyup=\"checkValidForm\">\r\n            <input type=\"text\" class=\"form-control\"  placeholder=\"password\" v-model=\"password\" @keyup=\"checkValidForm\">\r\n            <input type=\"text\" class=\"form-control\"  placeholder=\"password\" v-model=\"repeatPassword\" @keyup=\"checkValidForm\">\r\n            <p class=\"errorMessage\" >{{ errorMessage }}</p>\r\n            <button @click=\"submitForm\" class=\"btn btn-primary\" :disabled=\"registerBtnToggle\" @keyup=\"checkValidForm\">{{buttonValue}}</button>\r\n        </div>\r\n    </div>\r\n\r\n\r\n\r\n\r\n\r\n</template>\r\n\r\n<script>\r\n\r\nimport axios from 'axios';\r\n\r\nexport default{\r\n    name: 'RegisterComponent',\r\n\r\n    data(){\r\n        return{\r\n            name:'',\r\n            email:'',\r\n            password:'',\r\n            repeatPassword:'',\r\n            errorMessage:'',\r\n            buttonValue:'Register';\r\n\r\n            emailError :'',\r\n            nameError :'',\r\n            passwordError :'',\r\n            registerBtnToggle: true\r\n        };\r\n\r\n    },\r\n    mounted(){\r\n        \r\n    },\r\n    methods: {\r\n        checkValidForm(){\r\n            if(this.name !== '' && this.email !== '' && this.repeatPassword !== '' && this.password !== '' ){\r\n                if(this.repeatPassword == this.password ){\r\n\r\n                 this.errorMessage = '';\r\n                 this.registerBtnToggle = false;\r\n\r\n                 }else{\r\n                    this.errorMessage = 'Passwords donot match';\r\n                }\r\n\r\n            }else{\r\n                this.registerBtnToggle = true;\r\n            }\r\n        },\r\n       submitForm(){\r\n            axios.post('http://laravelpractice.local/api/register', {'email': this.email, 'name': this.name, 'password': this.password})\r\n                .then((response) => { alert(JSON.stringify(response.data)) })\r\n                 .catch((error) => {\r\n                    this.emailError = (JSON.stringify(error.response.data.message.email)) || '';\r\n                    this.nameError = (JSON.stringify(error.response.data.message.name)) || '';\r\n                    this.passwordError = (JSON.stringify(error.response.data.message.password)) || '' ;\r\n\r\n                     \r\n                 });\r\n\r\n                 if(this.emailError  ){ this.emailError = this.emailError.slice(2,-2); }\r\n                 if(this.nameError ){ this.nameError = this.nameError.slice(2,-2);}\r\n                 if(this.passwordError ){this.passwordError = this.passwordError.slice(2,-2); }\r\n        }\r\n\r\n        \r\n    },\r\n}\r\n\r\n\r\n</script>\r\n\r\n<style scoped>\r\n\r\n.register{\r\n\r\n    padding: 20%;\r\n    background-color: rgba(165, 42, 42, 0.186);\r\n \r\n    text-align: center;\r\n    \r\n}\r\n.errorMessage{\r\n    color:red;\r\n}\r\n\r\ninput{\r\n\r\n    margin-bottom:2rem;\r\n}\r\n</style>"],"mappings":";;;EAGaA,MAAM,EAAC,EAAE;EAACC,KAAK,EAAC;;gEAChBC,mBAAA,CAAiB,YAAb,UAAQ;;EACTD,KAAK,EAAC;AAAc;;EACpBA,KAAK,EAAC;AAAc;;EACpBA,KAAK,EAAC;AAAc;;EAOrBA,KAAK,EAAC;AAAc;mBAdnC;;uBACIE,mBAAA,CAgBM,cAdFD,mBAAA,CAaM,OAbNE,UAaM,GAZDC,UAAiB,EACjBH,mBAAA,CAA6C,KAA7CI,UAA6C,EAAAC,gBAAA,CAAjBC,IAAA,CAAAC,UAAU,kBACtCP,mBAAA,CAA4C,KAA5CQ,UAA4C,EAAAH,gBAAA,CAAhBC,IAAA,CAAAG,SAAS,kBACrCT,mBAAA,CAAgD,KAAhDU,UAAgD,EAAAL,gBAAA,CAApBC,IAAA,CAAAK,aAAa,kB,gBAE1CX,mBAAA,CAAoG;IAA7FY,IAAI,EAAC,MAAM;IAACb,KAAK,EAAC,cAAc;IAACc,WAAW,EAAC,OAAO;IATvE,uBAAAC,MAAA,QAAAA,MAAA,MAAAC,MAAA,IASiFT,IAAA,CAAAU,KAAK,GAAAD,MAAA;IAAGE,OAAK,EAAAH,MAAA,QAAAA,MAAA,UAAAI,IAAA,KAAEZ,IAAA,CAAAa,cAAA,IAAAb,IAAA,CAAAa,cAAA,IAAAD,IAAA,CAAc;iEAA7BZ,IAAA,CAAAU,KAAK,E,mBAE1EhB,mBAAA,CAAmG;IAA5FY,IAAI,EAAC,MAAM;IAACb,KAAK,EAAC,cAAc;IAAEc,WAAW,EAAC,MAAM;IAXvE,uBAAAC,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAWiFT,IAAA,CAAAc,IAAI,GAAAL,MAAA;IAAGE,OAAK,EAAAH,MAAA,QAAAA,MAAA,UAAAI,IAAA,KAAEZ,IAAA,CAAAa,cAAA,IAAAb,IAAA,CAAAa,cAAA,IAAAD,IAAA,CAAc;iEAA5BZ,IAAA,CAAAc,IAAI,E,mBACzEpB,mBAAA,CAA2G;IAApGY,IAAI,EAAC,MAAM;IAACb,KAAK,EAAC,cAAc;IAAEc,WAAW,EAAC,UAAU;IAZ3E,uBAAAC,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAYqFT,IAAA,CAAAe,QAAQ,GAAAN,MAAA;IAAGE,OAAK,EAAAH,MAAA,QAAAA,MAAA,UAAAI,IAAA,KAAEZ,IAAA,CAAAa,cAAA,IAAAb,IAAA,CAAAa,cAAA,IAAAD,IAAA,CAAc;iEAAhCZ,IAAA,CAAAe,QAAQ,E,mBACjFrB,mBAAA,CAAiH;IAA1GY,IAAI,EAAC,MAAM;IAACb,KAAK,EAAC,cAAc;IAAEc,WAAW,EAAC,UAAU;IAb3E,uBAAAC,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAaqFT,IAAA,CAAAgB,cAAc,GAAAP,MAAA;IAAGE,OAAK,EAAAH,MAAA,QAAAA,MAAA,UAAAI,IAAA,KAAEZ,IAAA,CAAAa,cAAA,IAAAb,IAAA,CAAAa,cAAA,IAAAD,IAAA,CAAc;iEAAtCZ,IAAA,CAAAgB,cAAc,E,GACvFtB,mBAAA,CAA+C,KAA/CuB,UAA+C,EAAAlB,gBAAA,CAAnBC,IAAA,CAAAkB,YAAY,kBACxCxB,mBAAA,CAAkI;IAAzHyB,OAAK,EAAAX,MAAA,QAAAA,MAAA,UAAAI,IAAA,KAAEZ,IAAA,CAAAoB,UAAA,IAAApB,IAAA,CAAAoB,UAAA,IAAAR,IAAA,CAAU;IAAEnB,KAAK,EAAC,iBAAiB;IAAE4B,QAAQ,EAAErB,IAAA,CAAAsB,iBAAiB;IAAGX,OAAK,EAAAH,MAAA,QAAAA,MAAA,UAAAI,IAAA,KAAEZ,IAAA,CAAAa,cAAA,IAAAb,IAAA,CAAAa,cAAA,IAAAD,IAAA,CAAc;sBAAIZ,IAAA,CAAAuB,WAAW,yCAfnIC,UAAA,E","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}