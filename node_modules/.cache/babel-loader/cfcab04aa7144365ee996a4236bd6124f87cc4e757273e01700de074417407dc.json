{"ast":null,"code":"import { createElementVNode as _createElementVNode, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = /*#__PURE__*/_createElementVNode(\"input\", {\n  type: \"number\",\n  value: \"{{ dollarAmount }}\"\n}, null, -1 /* HOISTED */);\nconst _hoisted_2 = /*#__PURE__*/_createElementVNode(\"input\", {\n  type: \"number\",\n  value: \"{{ rupeeAmount }}\"\n}, null, -1 /* HOISTED */);\nexport function render(_ctx, _cache) {\n  return _openBlock(), _createElementBlock(_Fragment, null, [_hoisted_1, _hoisted_2], 64 /* STABLE_FRAGMENT */);\n}","map":{"version":3,"names":["_createElementVNode","type","value","_createElementBlock","_Fragment","_hoisted_1","_hoisted_2"],"sources":["C:\\laragon\\www\\practiceapp\\src\\components\\CounterComponent.vue"],"sourcesContent":["\n\n<template>\n\n<input type=\"number\" value=\"{{ dollarAmount }}\">\n\n<input type=\"number\" value=\"{{ rupeeAmount }}\">\n</template>\n<script>\n\n\n\n</script>\n\n\n\n\n\n\n<!-- <template>\n  <div>\n    <h1>Total Count {{ count }}</h1>\n\n    <p v-if = \"maxLimitReached \">Max Flag reached</p>\n    <p v-if = \"minLimitReached \">Minimum Flag reached</p>\n\n\n    <h2 v-on:click=\"increment\">Increment count</h2>\n    <h2 v-on:click=\"decrement\">Decrement count</h2>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: 'CounterComponent',\n  props:{\n    maxLimit: {\n      type: Number\n    },\n    minLimit: {\n      type: Number\n    }\n  },\n  data() {\n    return {\n      count: 0,\n      maxLimitReached: false,\n      minLimitReached: false  \n    };\n  },\n  methods: {\n\n    increment() {\n      if((this.count != this.maxLimit) && this.maxLimitReached == false ){\n        this.count++;\n\n        if(this.minLimitReached == true){\n           this.minLimitReached = false;\n        }\n\n      }else{\n        this.maxLimitReached = true;\n      }\n    },\n\n    decrement() {\n      if(this.count != this.minLimit && this.minLimitReached == false){\n        this.count--;\n        if(this.maxLimitReached == true){\n           this.maxLimitReached = false;\n        }\n      }else{\n        this.minLimitReached = true;\n      }\n    }\n  }\n}\n</script> -->\n"],"mappings":";gCAIAA,mBAAA,CAAgD;EAAzCC,IAAI,EAAC,QAAQ;EAACC,KAAK,EAAC;;gCAE3BF,mBAAA,CAA+C;EAAxCC,IAAI,EAAC,QAAQ;EAACC,KAAK,EAAC;;;uBAN3BC,mBAAA,CAAAC,SAAA,SAIAC,UAAgD,EAEhDC,UAA+C,C","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}